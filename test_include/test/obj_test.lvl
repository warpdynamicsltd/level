global glob_c as complex;

type complex as rec(
  var x as int,
  var y as int
)

method init(var this as ref(complex), var a as int, var b as int)
{
  this.x = a;
  this.y = b;
}

method add(var this as ref(complex), var c as ref(complex)) as complex
{
  var res as complex;
  res.x = this.x + c.x;
  res.y = this.y + c.y;

  return res;
}

method +(var a as ref(complex), var b as ref(complex)) as complex
{
  var res as complex;
  res.x = a.x + b.x;
  res.y = a.y + b.y;

  return res;
}

method +(var a as ref(complex)) as complex
{
  return [a];
}

method -(var a as ref(complex)) as complex
{
  var res as complex;
  res.x = -a.x;
  res.y = -a.y;
  return res;
}

method abs(var a as ref(complex)) as complex
{
  var res as complex;
  res.x = abs(a.x);
  res.y = abs(a.y);
  return res;
}

method [](var this as ref(complex), var i as int) as int
{
  if (i == 0)
  {
    return this.x;
  }
  else
  {
    return this.y;
  }
}

method sqr_length(var this as ref(complex)) as int
{
  return this.x*this.x + this.y*this.y;
}

method mul(var this as ref(complex), var a as A) as complex
{
  var res as complex;
  res.x = a * this.x;
  res.y = a * this.y;
  return res;
}