entry
{
  echo 0x4 << 0x2 == 0x10;
  echo 0x4 >> 0x2 == 0x1;
  echo 0x3 & 0x2 == 0x2;
  echo 0x2 | 0x1 == 0x3;
  echo 0x3 ^ 0x2 == 0x1;
  echo ~0x1 == 0xfffffffffffffffe;
  echo 0x3ffffffff & 0x2ffffffff == 0x2ffffffff;
  echo 0x2ffffffff | 0x1ffffffff == 0x3ffffffff;
  echo 0x3ffffffff ^ 0x2ffffffff == 0x100000000;

  echo u32(0x4) << u32(0x2) == u32(0x10);
  echo u32(0x4) >> u32(0x2) == u32(0x1);
  echo u32(0x3) & u32(0x2) == u32(0x2);
  echo u32(0x2) | u32(0x1) == u32(0x3);
  echo u32(0x3) ^ u32(0x2) == u32(0x1);

  echo 4 << 2 == 16;
  echo 4 >> 2 == 1;
  echo -4 << 2 == -16;
  echo -4 >> 2 == -1;
  echo ~1 == -2;
  echo 3 & 2 == 2;
  echo 2 | 1 == 3;
  echo 3 ^ 2 == 1;
  echo i64(0x3ffffffff) & i64(0x2ffffffff) == i64(0x2ffffffff);
  echo i64(0x2ffffffff) | i64(0x1ffffffff) == i64(0x3ffffffff);
  echo i64(0x3ffffffff) ^ i64(0x2ffffffff) == i64(0x100000000);

  echo i32(4) << i32(2) == i32(16);
  echo i32(4) >> i32(2) == i32(1);
  echo i32(-4) << i32(2) == i32(-16);
  echo i32(-4) >> i32(2) == i32(-1);
  echo ~i32(1) == -i32(2);
  echo i32(3) & i32(2) == i32(2);
  echo i32(2) | i32(1) == i32(3);
  echo i32(3) ^ i32(2) == i32(1);

  echo byte(4) << byte(2) == byte(16);
  echo byte(4) << byte(2) == byte(16);
  echo byte(4) >> byte(2) == byte(1);
  echo byte(3) & byte(2) == byte(2);
  echo byte(2) | byte(1) == byte(3);
  echo byte(3) ^ byte(2) == byte(1);
  echo ~byte(1) == byte(0xfe);
}