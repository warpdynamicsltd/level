from level.core.x86_64 import *
from level.tests import test

begin()
mov_([0x10], eax)
mov_([0x10], ecx)
mov_([0x10], edx)
mov_([0x10], ebx)
mov_([0x10], esp)
mov_([0x10], ebp)
mov_([0x10], esi)
mov_([0x10], edi)
mov_([ecx], eax)
mov_([ebp], ecx)
mov_([esi], edx)
mov_([eax], ebx)
mov_([esi], esp)
mov_([edx], ebp)
mov_([ecx], esi)
mov_([ebp], edi)
mov_([2*ecx], eax)
mov_([2*ebp], ecx)
mov_([2*esi], edx)
mov_([2*eax], ebx)
mov_([2*esi], esp)
mov_([2*edx], ebp)
mov_([2*ecx], esi)
mov_([4*ebp], edi)
mov_([4*ecx], eax)
mov_([4*ebp], ecx)
mov_([4*esi], edx)
mov_([4*eax], ebx)
mov_([4*esi], esp)
mov_([4*edx], ebp)
mov_([4*ecx], esi)
mov_([8*ebp], edi)
mov_([8*ebp], edi)
mov_([8*ecx], eax)
mov_([8*ebp], ecx)
mov_([8*esi], edx)
mov_([8*eax], ebx)
mov_([8*esi], esp)
mov_([8*edx], ebp)
mov_([8*ecx], esi)
mov_([8*ebp], edi)
mov_([ecx + 0x3], eax)
mov_([ebp + 0x3], ecx)
mov_([esi + 0x3], edx)
mov_([eax + 0x3], ebx)
mov_([esi + 0x3], esp)
mov_([edx + 0x3], ebp)
mov_([ecx + 0x3], esi)
mov_([ebp + 0x3], edi)
mov_([2*ecx + 0x3], eax)
mov_([2*ebp + 0x3], ecx)
mov_([2*esi + 0x3], edx)
mov_([2*eax + 0x3], ebx)
mov_([2*esi + 0x3], esp)
mov_([2*edx + 0x3], ebp)
mov_([2*ecx + 0x3], esi)
mov_([2*ebp + 0x3], edi)
mov_([4*ecx + 0x3], eax)
mov_([4*ebp + 0x3], ecx)
mov_([4*esi + 0x3], edx)
mov_([4*eax + 0x3], ebx)
mov_([4*esi + 0x3], esp)
mov_([4*edx + 0x3], ebp)
mov_([4*ecx + 0x3], esi)
mov_([4*ebp + 0x3], edi)
mov_([8*ecx + 0x3], eax)
mov_([8*ebp + 0x3], ecx)
mov_([8*esi + 0x3], edx)
mov_([8*eax + 0x3], ebx)
mov_([8*esi + 0x3], esp)
mov_([8*edx + 0x3], ebp)
mov_([8*ecx + 0x3], esi)
mov_([8*ebp + 0x3], edi)
mov_([ebp + ecx], eax)
mov_([ebp + eax], ecx)
mov_([esi + ecx], edx)
mov_([eax + edx], ebx)
mov_([esi + edi], esp)
mov_([ebp + esp], ebp)
mov_([ecx + esi], esi)
mov_([ebp + ebx], edi)
mov_([2*ebp + ecx], eax)
mov_([2*ebp + eax], ecx)
mov_([2*esi + ecx], edx)
mov_([2*eax + edx], ebx)
mov_([2*esi + edi], esp)
mov_([2*ebp + esp], ebp)
mov_([2*ecx + esi], esi)
mov_([2*ebp + ebx], edi)
mov_([4*ebp + ecx], eax)
mov_([4*ebp + eax], ecx)
mov_([4*esi + ecx], edx)
mov_([4*eax + edx], ebx)
mov_([4*esi + edi], esp)
mov_([4*ebp + esp], ebp)
mov_([4*ecx + esi], esi)
mov_([4*ebp + ebx], edi)
mov_([8*ebp + eax], ecx)
mov_([8*esi + ecx], edx)
mov_([8*eax + edx], ebx)
mov_([8*esi + edi], esp)
mov_([8*ebp + esp], ebp)
mov_([8*ecx + esi], esi)
mov_([8*ebp + ebx], edi)
mov_([ebp + ecx], eax)
mov_([ebp + eax], ecx)
mov_([esi + ecx], edx)
mov_([eax + edx], ebx)
mov_([esi + edi], esp)
mov_([ebp + esp], ebp)
mov_([ecx + esi], esi)
mov_([ebp + ebx], edi)
mov_([2*ebp + ecx], eax)
mov_([2*ebp + eax], ecx)
mov_([2*esi + ecx], edx)
mov_([2*eax + edx], ebx)
mov_([2*esi + edi], esp)
mov_([2*ebp + esp], ebp)
mov_([2*ecx + esi], esi)
mov_([2*ebp + ebx], edi)
mov_([4*ebp + ecx], eax)
mov_([4*ebp + eax], ecx)
mov_([4*esi + ecx], edx)
mov_([4*eax + edx], ebx)
mov_([4*esi + edi], esp)
mov_([4*ebp + esp], ebp)
mov_([4*ecx + esi], esi)
mov_([4*ebp + ebx], edi)
mov_([8*ebp + eax], ecx)
mov_([8*esi + ecx], edx)
mov_([8*eax + edx], ebx)
mov_([8*esi + edi], esp)
mov_([8*ebp + esp], ebp)
mov_([8*ecx + esi], esi)
mov_([8*ebp + ebx], edi)
mov_([2*ebp + ecx], eax)
mov_([2*ebp + eax + 0x03], ecx)
mov_([2*esi + ecx + 0x03], edx)
mov_([2*eax + edx + 0x03], ebx)
mov_([2*esi + edi + 0x03], esp)
mov_([2*ebp + esp + 0x03], ebp)
mov_([2*ecx + esi + 0x03], esi)
mov_([2*ebp + ebx + 0x03], edi)
mov_([4*ebp + ecx + 0x03], eax)
mov_([4*ebp + eax + 0x03], ecx)
mov_([4*esi + ecx + 0x03], edx)
mov_([4*eax + edx + 0x03], ebx)
mov_([4*esi + edi + 0x03], esp)
mov_([4*ebp + esp + 0x03], ebp)
mov_([4*ecx + esi + 0x03], esi)
mov_([4*ebp + ebx + 0x03], edi)
mov_([8*ebp + eax + 0x03], ecx)
mov_([8*esi + ecx + 0x03], edx)
mov_([8*eax + edx + 0x03], ebx)
mov_([8*esi + edi + 0x03], esp)
mov_([8*ebp + esp + 0x03], ebp)
mov_([8*ecx + esi + 0x03], esi)
mov_([8*ebp + ebx + 0x03], edi)

test(b'\x89\x04%\x10\x00\x00\x00\x89\x0c%\x10\x00\x00\x00\x89\x14%\x10\x00\x00\x00\x89\x1c%\x10\x00\x00\x00\x89$%\x10\x00\x00\x00\x89,%\x10\x00\x00\x00\x894%\x10\x00\x00\x00\x89<%\x10\x00\x00\x00\x89\x04\r\x00\x00\x00\x00\x89\x0c-\x00\x00\x00\x00\x89\x145\x00\x00\x00\x00\x89\x1c\x05\x00\x00\x00\x00\x89$5\x00\x00\x00\x00\x89,\x15\x00\x00\x00\x00\x894\r\x00\x00\x00\x00\x89<-\x00\x00\x00\x00\x89\x04M\x00\x00\x00\x00\x89\x0cm\x00\x00\x00\x00\x89\x14u\x00\x00\x00\x00\x89\x1cE\x00\x00\x00\x00\x89$u\x00\x00\x00\x00\x89,U\x00\x00\x00\x00\x894M\x00\x00\x00\x00\x89<\xad\x00\x00\x00\x00\x89\x04\x8d\x00\x00\x00\x00\x89\x0c\xad\x00\x00\x00\x00\x89\x14\xb5\x00\x00\x00\x00\x89\x1c\x85\x00\x00\x00\x00\x89$\xb5\x00\x00\x00\x00\x89,\x95\x00\x00\x00\x00\x894\x8d\x00\x00\x00\x00\x89<\xed\x00\x00\x00\x00\x89<\xed\x00\x00\x00\x00\x89\x04\xcd\x00\x00\x00\x00\x89\x0c\xed\x00\x00\x00\x00\x89\x14\xf5\x00\x00\x00\x00\x89\x1c\xc5\x00\x00\x00\x00\x89$\xf5\x00\x00\x00\x00\x89,\xd5\x00\x00\x00\x00\x894\xcd\x00\x00\x00\x00\x89<\xed\x00\x00\x00\x00\x89\x04\r\x03\x00\x00\x00\x89\x0c-\x03\x00\x00\x00\x89\x145\x03\x00\x00\x00\x89\x1c\x05\x03\x00\x00\x00\x89$5\x03\x00\x00\x00\x89,\x15\x03\x00\x00\x00\x894\r\x03\x00\x00\x00\x89<-\x03\x00\x00\x00\x89\x04M\x03\x00\x00\x00\x89\x0cm\x03\x00\x00\x00\x89\x14u\x03\x00\x00\x00\x89\x1cE\x03\x00\x00\x00\x89$u\x03\x00\x00\x00\x89,U\x03\x00\x00\x00\x894M\x03\x00\x00\x00\x89<m\x03\x00\x00\x00\x89\x04\x8d\x03\x00\x00\x00\x89\x0c\xad\x03\x00\x00\x00\x89\x14\xb5\x03\x00\x00\x00\x89\x1c\x85\x03\x00\x00\x00\x89$\xb5\x03\x00\x00\x00\x89,\x95\x03\x00\x00\x00\x894\x8d\x03\x00\x00\x00\x89<\xad\x03\x00\x00\x00\x89\x04\xcd\x03\x00\x00\x00\x89\x0c\xed\x03\x00\x00\x00\x89\x14\xf5\x03\x00\x00\x00\x89\x1c\xc5\x03\x00\x00\x00\x89$\xf5\x03\x00\x00\x00\x89,\xd5\x03\x00\x00\x00\x894\xcd\x03\x00\x00\x00\x89<\xed\x03\x00\x00\x00\x89\x04)\x89\x0c(\x89\x141\x89\x1c\x02\x89$7\x89,,\x894\x0e\x89<+\x89\x84i\x00\x00\x00\x00\x89\x8ch\x00\x00\x00\x00\x89\x94q\x00\x00\x00\x00\x89\x9cB\x00\x00\x00\x00\x89\xa4w\x00\x00\x00\x00\x89\xacl\x00\x00\x00\x00\x89\xb4N\x00\x00\x00\x00\x89\xbck\x00\x00\x00\x00\x89\x84\xa9\x00\x00\x00\x00\x89\x8c\xa8\x00\x00\x00\x00\x89\x94\xb1\x00\x00\x00\x00\x89\x9c\x82\x00\x00\x00\x00\x89\xa4\xb7\x00\x00\x00\x00\x89\xac\xac\x00\x00\x00\x00\x89\xb4\x8e\x00\x00\x00\x00\x89\xbc\xab\x00\x00\x00\x00\x89\x8c\xe8\x00\x00\x00\x00\x89\x94\xf1\x00\x00\x00\x00\x89\x9c\xc2\x00\x00\x00\x00\x89\xa4\xf7\x00\x00\x00\x00\x89\xac\xec\x00\x00\x00\x00\x89\xb4\xce\x00\x00\x00\x00\x89\xbc\xeb\x00\x00\x00\x00\x89\x04)\x89\x0c(\x89\x141\x89\x1c\x02\x89$7\x89,,\x894\x0e\x89<+\x89\x84i\x00\x00\x00\x00\x89\x8ch\x00\x00\x00\x00\x89\x94q\x00\x00\x00\x00\x89\x9cB\x00\x00\x00\x00\x89\xa4w\x00\x00\x00\x00\x89\xacl\x00\x00\x00\x00\x89\xb4N\x00\x00\x00\x00\x89\xbck\x00\x00\x00\x00\x89\x84\xa9\x00\x00\x00\x00\x89\x8c\xa8\x00\x00\x00\x00\x89\x94\xb1\x00\x00\x00\x00\x89\x9c\x82\x00\x00\x00\x00\x89\xa4\xb7\x00\x00\x00\x00\x89\xac\xac\x00\x00\x00\x00\x89\xb4\x8e\x00\x00\x00\x00\x89\xbc\xab\x00\x00\x00\x00\x89\x8c\xe8\x00\x00\x00\x00\x89\x94\xf1\x00\x00\x00\x00\x89\x9c\xc2\x00\x00\x00\x00\x89\xa4\xf7\x00\x00\x00\x00\x89\xac\xec\x00\x00\x00\x00\x89\xb4\xce\x00\x00\x00\x00\x89\xbc\xeb\x00\x00\x00\x00\x89\x84i\x00\x00\x00\x00\x89\x8ch\x03\x00\x00\x00\x89\x94q\x03\x00\x00\x00\x89\x9cB\x03\x00\x00\x00\x89\xa4w\x03\x00\x00\x00\x89\xacl\x03\x00\x00\x00\x89\xb4N\x03\x00\x00\x00\x89\xbck\x03\x00\x00\x00\x89\x84\xa9\x03\x00\x00\x00\x89\x8c\xa8\x03\x00\x00\x00\x89\x94\xb1\x03\x00\x00\x00\x89\x9c\x82\x03\x00\x00\x00\x89\xa4\xb7\x03\x00\x00\x00\x89\xac\xac\x03\x00\x00\x00\x89\xb4\x8e\x03\x00\x00\x00\x89\xbc\xab\x03\x00\x00\x00\x89\x8c\xe8\x03\x00\x00\x00\x89\x94\xf1\x03\x00\x00\x00\x89\x9c\xc2\x03\x00\x00\x00\x89\xa4\xf7\x03\x00\x00\x00\x89\xac\xec\x03\x00\x00\x00\x89\xb4\xce\x03\x00\x00\x00\x89\xbc\xeb\x03\x00\x00\x00')

begin()
mov_(eax, ebx)
mov_(ebx, ebp)
mov_(esi, ebp)
mov_(ebp, edi)

test(b'\x89\xd8\x89\xeb\x89\xee\x89\xfd')

begin()
mov_([0x10], al)
mov_([0x10], cl)
mov_([0x10], dl)
mov_([0x10], bl)
mov_([0x10], ah)
mov_([0x10], ch)
mov_([0x10], dh)
mov_([0x10], bh)
mov_([ecx], al)
mov_([ebp], cl)
mov_([esi], dl)
mov_([eax], bl)
mov_([esi], ah)
mov_([edx], ch)
mov_([ecx], dh)
mov_([ebp], bh)
mov_([2*ecx], al)
mov_([2*ebp], cl)
mov_([2*esi], dl)
mov_([2*eax], bl)
mov_([2*esi], ah)
mov_([2*edx], ch)
mov_([2*ecx], dh)
mov_([4*ebp], bh)
mov_([4*ecx], al)
mov_([4*ebp], cl)
mov_([4*esi], dl)
mov_([4*eax], bl)
mov_([4*esi], ah)
mov_([4*edx], ch)
mov_([4*ecx], dh)
mov_([8*ebp], bh)
mov_([8*ebp], bh)
mov_([8*ecx], al)
mov_([8*ebp], cl)
mov_([8*esi], dl)
mov_([8*eax], bl)
mov_([8*esi], ah)
mov_([8*edx], ch)
mov_([8*ecx], dh)
mov_([8*ebp], bh)
mov_([ecx + 0x3], al)
mov_([ebp + 0x3], cl)
mov_([esi + 0x3], dl)
mov_([eax + 0x3], bl)
mov_([esi + 0x3], ah)
mov_([edx + 0x3], ch)
mov_([ecx + 0x3], dh)
mov_([ebp + 0x3], bh)
mov_([2*ecx + 0x3], al)
mov_([2*ebp + 0x3], cl)
mov_([2*esi + 0x3], dl)
mov_([2*eax + 0x3], bl)
mov_([2*esi + 0x3], ah)
mov_([2*edx + 0x3], ch)
mov_([2*ecx + 0x3], dh)
mov_([2*ebp + 0x3], bh)
mov_([4*ecx + 0x3], al)
mov_([4*ebp + 0x3], cl)
mov_([4*esi + 0x3], dl)
mov_([4*eax + 0x3], bl)
mov_([4*esi + 0x3], ah)
mov_([4*edx + 0x3], ch)
mov_([4*ecx + 0x3], dh)
mov_([4*ebp + 0x3], bh)
mov_([8*ecx + 0x3], al)
mov_([8*ebp + 0x3], cl)
mov_([8*esi + 0x3], dl)
mov_([8*eax + 0x3], bl)
mov_([8*esi + 0x3], ah)
mov_([8*edx + 0x3], ch)
mov_([8*ecx + 0x3], dh)
mov_([8*ebp + 0x3], bh)
mov_([ebp + ecx], al)
mov_([ebp + eax], cl)
mov_([esi + ecx], dl)
mov_([eax + edx], bl)
mov_([esi + edi], ah)
mov_([ebp + esp], ch)
mov_([ecx + esi], dh)
mov_([ebp + ebx], bh)
mov_([2*ebp + ecx], al)
mov_([2*ebp + eax], cl)
mov_([2*esi + ecx], dl)
mov_([2*eax + edx], bl)
mov_([2*esi + edi], ah)
mov_([2*ebp + esp], ch)
mov_([2*ecx + esi], dh)
mov_([2*ebp + ebx], bh)
mov_([4*ebp + ecx], al)
mov_([4*ebp + eax], cl)
mov_([4*esi + ecx], dl)
mov_([4*eax + edx], bl)
mov_([4*esi + edi], ah)
mov_([4*ebp + esp], ch)
mov_([4*ecx + esi], dh)
mov_([4*ebp + ebx], bh)
mov_([8*ebp + eax], cl)
mov_([8*esi + ecx], dl)
mov_([8*eax + edx], bl)
mov_([8*esi + edi], ah)
mov_([8*ebp + esp], ch)
mov_([8*ecx + esi], dh)
mov_([8*ebp + ebx], bh)
mov_([ebp + ecx], al)
mov_([ebp + eax], cl)
mov_([esi + ecx], dl)
mov_([eax + edx], bl)
mov_([esi + edi], ah)
mov_([ebp + esp], ch)
mov_([ecx + esi], dh)
mov_([ebp + ebx], bh)
mov_([2*ebp + ecx], al)
mov_([2*ebp + eax], cl)
mov_([2*esi + ecx], dl)
mov_([2*eax + edx], bl)
mov_([2*esi + edi], ah)
mov_([2*ebp + esp], ch)
mov_([2*ecx + esi], dh)
mov_([2*ebp + ebx], bh)
mov_([4*ebp + ecx], al)
mov_([4*ebp + eax], cl)
mov_([4*esi + ecx], dl)
mov_([4*eax + edx], bl)
mov_([4*esi + edi], ah)
mov_([4*ebp + esp], ch)
mov_([4*ecx + esi], dh)
mov_([4*ebp + ebx], bh)
mov_([8*ebp + eax], cl)
mov_([8*esi + ecx], dl)
mov_([8*eax + edx], bl)
mov_([8*esi + edi], ah)
mov_([8*ebp + esp], ch)
mov_([8*ecx + esi], dh)
mov_([8*ebp + ebx], bh)
mov_([2*ebp + ecx], al)
mov_([2*ebp + eax + 0x03], cl)
mov_([2*esi + ecx + 0x03], dl)
mov_([2*eax + edx + 0x03], bl)
mov_([2*esi + edi + 0x03], ah)
mov_([2*ebp + esp + 0x03], ch)
mov_([2*ecx + esi + 0x03], dh)
mov_([2*ebp + ebx + 0x03], bh)
mov_([4*ebp + ecx + 0x03], al)
mov_([4*ebp + eax + 0x03], cl)
mov_([4*esi + ecx + 0x03], dl)
mov_([4*eax + edx + 0x03], bl)
mov_([4*esi + edi + 0x03], ah)
mov_([4*ebp + esp + 0x03], ch)
mov_([4*ecx + esi + 0x03], dh)
mov_([4*ebp + ebx + 0x03], bh)
mov_([8*ebp + eax + 0x03], cl)
mov_([8*esi + ecx + 0x03], dl)
mov_([8*eax + edx + 0x03], bl)
mov_([8*esi + edi + 0x03], ah)
mov_([8*ebp + esp + 0x03], ch)
mov_([8*ecx + esi + 0x03], dh)
mov_([8*ebp + ebx + 0x03], bh)

test(b'\x88\x04%\x10\x00\x00\x00\x88\x0c%\x10\x00\x00\x00\x88\x14%\x10\x00\x00\x00\x88\x1c%\x10\x00\x00\x00\x88$%\x10\x00\x00\x00\x88,%\x10\x00\x00\x00\x884%\x10\x00\x00\x00\x88<%\x10\x00\x00\x00\x88\x04\r\x00\x00\x00\x00\x88\x0c-\x00\x00\x00\x00\x88\x145\x00\x00\x00\x00\x88\x1c\x05\x00\x00\x00\x00\x88$5\x00\x00\x00\x00\x88,\x15\x00\x00\x00\x00\x884\r\x00\x00\x00\x00\x88<-\x00\x00\x00\x00\x88\x04M\x00\x00\x00\x00\x88\x0cm\x00\x00\x00\x00\x88\x14u\x00\x00\x00\x00\x88\x1cE\x00\x00\x00\x00\x88$u\x00\x00\x00\x00\x88,U\x00\x00\x00\x00\x884M\x00\x00\x00\x00\x88<\xad\x00\x00\x00\x00\x88\x04\x8d\x00\x00\x00\x00\x88\x0c\xad\x00\x00\x00\x00\x88\x14\xb5\x00\x00\x00\x00\x88\x1c\x85\x00\x00\x00\x00\x88$\xb5\x00\x00\x00\x00\x88,\x95\x00\x00\x00\x00\x884\x8d\x00\x00\x00\x00\x88<\xed\x00\x00\x00\x00\x88<\xed\x00\x00\x00\x00\x88\x04\xcd\x00\x00\x00\x00\x88\x0c\xed\x00\x00\x00\x00\x88\x14\xf5\x00\x00\x00\x00\x88\x1c\xc5\x00\x00\x00\x00\x88$\xf5\x00\x00\x00\x00\x88,\xd5\x00\x00\x00\x00\x884\xcd\x00\x00\x00\x00\x88<\xed\x00\x00\x00\x00\x88\x04\r\x03\x00\x00\x00\x88\x0c-\x03\x00\x00\x00\x88\x145\x03\x00\x00\x00\x88\x1c\x05\x03\x00\x00\x00\x88$5\x03\x00\x00\x00\x88,\x15\x03\x00\x00\x00\x884\r\x03\x00\x00\x00\x88<-\x03\x00\x00\x00\x88\x04M\x03\x00\x00\x00\x88\x0cm\x03\x00\x00\x00\x88\x14u\x03\x00\x00\x00\x88\x1cE\x03\x00\x00\x00\x88$u\x03\x00\x00\x00\x88,U\x03\x00\x00\x00\x884M\x03\x00\x00\x00\x88<m\x03\x00\x00\x00\x88\x04\x8d\x03\x00\x00\x00\x88\x0c\xad\x03\x00\x00\x00\x88\x14\xb5\x03\x00\x00\x00\x88\x1c\x85\x03\x00\x00\x00\x88$\xb5\x03\x00\x00\x00\x88,\x95\x03\x00\x00\x00\x884\x8d\x03\x00\x00\x00\x88<\xad\x03\x00\x00\x00\x88\x04\xcd\x03\x00\x00\x00\x88\x0c\xed\x03\x00\x00\x00\x88\x14\xf5\x03\x00\x00\x00\x88\x1c\xc5\x03\x00\x00\x00\x88$\xf5\x03\x00\x00\x00\x88,\xd5\x03\x00\x00\x00\x884\xcd\x03\x00\x00\x00\x88<\xed\x03\x00\x00\x00\x88\x04)\x88\x0c(\x88\x141\x88\x1c\x02\x88$7\x88,,\x884\x0e\x88<+\x88\x84i\x00\x00\x00\x00\x88\x8ch\x00\x00\x00\x00\x88\x94q\x00\x00\x00\x00\x88\x9cB\x00\x00\x00\x00\x88\xa4w\x00\x00\x00\x00\x88\xacl\x00\x00\x00\x00\x88\xb4N\x00\x00\x00\x00\x88\xbck\x00\x00\x00\x00\x88\x84\xa9\x00\x00\x00\x00\x88\x8c\xa8\x00\x00\x00\x00\x88\x94\xb1\x00\x00\x00\x00\x88\x9c\x82\x00\x00\x00\x00\x88\xa4\xb7\x00\x00\x00\x00\x88\xac\xac\x00\x00\x00\x00\x88\xb4\x8e\x00\x00\x00\x00\x88\xbc\xab\x00\x00\x00\x00\x88\x8c\xe8\x00\x00\x00\x00\x88\x94\xf1\x00\x00\x00\x00\x88\x9c\xc2\x00\x00\x00\x00\x88\xa4\xf7\x00\x00\x00\x00\x88\xac\xec\x00\x00\x00\x00\x88\xb4\xce\x00\x00\x00\x00\x88\xbc\xeb\x00\x00\x00\x00\x88\x04)\x88\x0c(\x88\x141\x88\x1c\x02\x88$7\x88,,\x884\x0e\x88<+\x88\x84i\x00\x00\x00\x00\x88\x8ch\x00\x00\x00\x00\x88\x94q\x00\x00\x00\x00\x88\x9cB\x00\x00\x00\x00\x88\xa4w\x00\x00\x00\x00\x88\xacl\x00\x00\x00\x00\x88\xb4N\x00\x00\x00\x00\x88\xbck\x00\x00\x00\x00\x88\x84\xa9\x00\x00\x00\x00\x88\x8c\xa8\x00\x00\x00\x00\x88\x94\xb1\x00\x00\x00\x00\x88\x9c\x82\x00\x00\x00\x00\x88\xa4\xb7\x00\x00\x00\x00\x88\xac\xac\x00\x00\x00\x00\x88\xb4\x8e\x00\x00\x00\x00\x88\xbc\xab\x00\x00\x00\x00\x88\x8c\xe8\x00\x00\x00\x00\x88\x94\xf1\x00\x00\x00\x00\x88\x9c\xc2\x00\x00\x00\x00\x88\xa4\xf7\x00\x00\x00\x00\x88\xac\xec\x00\x00\x00\x00\x88\xb4\xce\x00\x00\x00\x00\x88\xbc\xeb\x00\x00\x00\x00\x88\x84i\x00\x00\x00\x00\x88\x8ch\x03\x00\x00\x00\x88\x94q\x03\x00\x00\x00\x88\x9cB\x03\x00\x00\x00\x88\xa4w\x03\x00\x00\x00\x88\xacl\x03\x00\x00\x00\x88\xb4N\x03\x00\x00\x00\x88\xbck\x03\x00\x00\x00\x88\x84\xa9\x03\x00\x00\x00\x88\x8c\xa8\x03\x00\x00\x00\x88\x94\xb1\x03\x00\x00\x00\x88\x9c\x82\x03\x00\x00\x00\x88\xa4\xb7\x03\x00\x00\x00\x88\xac\xac\x03\x00\x00\x00\x88\xb4\x8e\x03\x00\x00\x00\x88\xbc\xab\x03\x00\x00\x00\x88\x8c\xe8\x03\x00\x00\x00\x88\x94\xf1\x03\x00\x00\x00\x88\x9c\xc2\x03\x00\x00\x00\x88\xa4\xf7\x03\x00\x00\x00\x88\xac\xec\x03\x00\x00\x00\x88\xb4\xce\x03\x00\x00\x00\x88\xbc\xeb\x03\x00\x00\x00')

begin()
add_([0x10], eax)
add_([0x10], ecx)
add_([0x10], edx)
add_([0x10], ebx)
add_([0x10], esp)
add_([0x10], ebp)
add_([0x10], esi)
add_([0x10], edi)
add_([ecx], eax)
add_([ebp], ecx)
add_([esi], edx)
add_([eax], ebx)
add_([esi], esp)
add_([edx], ebp)
add_([ecx], esi)
add_([ebp], edi)
add_([2*ecx], eax)
add_([2*ebp], ecx)
add_([2*esi], edx)
add_([2*eax], ebx)
add_([2*esi], esp)
add_([2*edx], ebp)
add_([2*ecx], esi)
add_([4*ebp], edi)
add_([4*ecx], eax)
add_([4*ebp], ecx)
add_([4*esi], edx)
add_([4*eax], ebx)
add_([4*esi], esp)
add_([4*edx], ebp)
add_([4*ecx], esi)
add_([8*ebp], edi)
add_([8*ebp], edi)
add_([8*ecx], eax)
add_([8*ebp], ecx)
add_([8*esi], edx)
add_([8*eax], ebx)
add_([8*esi], esp)
add_([8*edx], ebp)
add_([8*ecx], esi)
add_([8*ebp], edi)
add_([ecx + 0x3], eax)
add_([ebp + 0x3], ecx)
add_([esi + 0x3], edx)
add_([eax + 0x3], ebx)
add_([esi + 0x3], esp)
add_([edx + 0x3], ebp)
add_([ecx + 0x3], esi)
add_([ebp + 0x3], edi)
add_([2*ecx + 0x3], eax)
add_([2*ebp + 0x3], ecx)
add_([2*esi + 0x3], edx)
add_([2*eax + 0x3], ebx)
add_([2*esi + 0x3], esp)
add_([2*edx + 0x3], ebp)
add_([2*ecx + 0x3], esi)
add_([2*ebp + 0x3], edi)
add_([4*ecx + 0x3], eax)
add_([4*ebp + 0x3], ecx)
add_([4*esi + 0x3], edx)
add_([4*eax + 0x3], ebx)
add_([4*esi + 0x3], esp)
add_([4*edx + 0x3], ebp)
add_([4*ecx + 0x3], esi)
add_([4*ebp + 0x3], edi)
add_([8*ecx + 0x3], eax)
add_([8*ebp + 0x3], ecx)
add_([8*esi + 0x3], edx)
add_([8*eax + 0x3], ebx)
add_([8*esi + 0x3], esp)
add_([8*edx + 0x3], ebp)
add_([8*ecx + 0x3], esi)
add_([8*ebp + 0x3], edi)
add_([ebp + ecx], eax)
add_([ebp + eax], ecx)
add_([esi + ecx], edx)
add_([eax + edx], ebx)
add_([esi + edi], esp)
add_([ebp + esp], ebp)
add_([ecx + esi], esi)
add_([ebp + ebx], edi)
add_([2*ebp + ecx], eax)
add_([2*ebp + eax], ecx)
add_([2*esi + ecx], edx)
add_([2*eax + edx], ebx)
add_([2*esi + edi], esp)
add_([2*ebp + esp], ebp)
add_([2*ecx + esi], esi)
add_([2*ebp + ebx], edi)
add_([4*ebp + ecx], eax)
add_([4*ebp + eax], ecx)
add_([4*esi + ecx], edx)
add_([4*eax + edx], ebx)
add_([4*esi + edi], esp)
add_([4*ebp + esp], ebp)
add_([4*ecx + esi], esi)
add_([4*ebp + ebx], edi)
add_([8*ebp + eax], ecx)
add_([8*esi + ecx], edx)
add_([8*eax + edx], ebx)
add_([8*esi + edi], esp)
add_([8*ebp + esp], ebp)
add_([8*ecx + esi], esi)
add_([8*ebp + ebx], edi)
add_([ebp + ecx], eax)
add_([ebp + eax], ecx)
add_([esi + ecx], edx)
add_([eax + edx], ebx)
add_([esi + edi], esp)
add_([ebp + esp], ebp)
add_([ecx + esi], esi)
add_([ebp + ebx], edi)
add_([2*ebp + ecx], eax)
add_([2*ebp + eax], ecx)
add_([2*esi + ecx], edx)
add_([2*eax + edx], ebx)
add_([2*esi + edi], esp)
add_([2*ebp + esp], ebp)
add_([2*ecx + esi], esi)
add_([2*ebp + ebx], edi)
add_([4*ebp + ecx], eax)
add_([4*ebp + eax], ecx)
add_([4*esi + ecx], edx)
add_([4*eax + edx], ebx)
add_([4*esi + edi], esp)
add_([4*ebp + esp], ebp)
add_([4*ecx + esi], esi)
add_([4*ebp + ebx], edi)
add_([8*ebp + eax], ecx)
add_([8*esi + ecx], edx)
add_([8*eax + edx], ebx)
add_([8*esi + edi], esp)
add_([8*ebp + esp], ebp)
add_([8*ecx + esi], esi)
add_([8*ebp + ebx], edi)
add_([2*ebp + ecx], eax)
add_([2*ebp + eax + 0x03], ecx)
add_([2*esi + ecx + 0x03], edx)
add_([2*eax + edx + 0x03], ebx)
add_([2*esi + edi + 0x03], esp)
add_([2*ebp + esp + 0x03], ebp)
add_([2*ecx + esi + 0x03], esi)
add_([2*ebp + ebx + 0x03], edi)
add_([4*ebp + ecx + 0x03], eax)
add_([4*ebp + eax + 0x03], ecx)
add_([4*esi + ecx + 0x03], edx)
add_([4*eax + edx + 0x03], ebx)
add_([4*esi + edi + 0x03], esp)
add_([4*ebp + esp + 0x03], ebp)
add_([4*ecx + esi + 0x03], esi)
add_([4*ebp + ebx + 0x03], edi)
add_([8*ebp + eax + 0x03], ecx)
add_([8*esi + ecx + 0x03], edx)
add_([8*eax + edx + 0x03], ebx)
add_([8*esi + edi + 0x03], esp)
add_([8*ebp + esp + 0x03], ebp)
add_([8*ecx + esi + 0x03], esi)
add_([8*ebp + ebx + 0x03], edi)

test(b'\x01\x04%\x10\x00\x00\x00\x01\x0c%\x10\x00\x00\x00\x01\x14%\x10\x00\x00\x00\x01\x1c%\x10\x00\x00\x00\x01$%\x10\x00\x00\x00\x01,%\x10\x00\x00\x00\x014%\x10\x00\x00\x00\x01<%\x10\x00\x00\x00\x01\x04\r\x00\x00\x00\x00\x01\x0c-\x00\x00\x00\x00\x01\x145\x00\x00\x00\x00\x01\x1c\x05\x00\x00\x00\x00\x01$5\x00\x00\x00\x00\x01,\x15\x00\x00\x00\x00\x014\r\x00\x00\x00\x00\x01<-\x00\x00\x00\x00\x01\x04M\x00\x00\x00\x00\x01\x0cm\x00\x00\x00\x00\x01\x14u\x00\x00\x00\x00\x01\x1cE\x00\x00\x00\x00\x01$u\x00\x00\x00\x00\x01,U\x00\x00\x00\x00\x014M\x00\x00\x00\x00\x01<\xad\x00\x00\x00\x00\x01\x04\x8d\x00\x00\x00\x00\x01\x0c\xad\x00\x00\x00\x00\x01\x14\xb5\x00\x00\x00\x00\x01\x1c\x85\x00\x00\x00\x00\x01$\xb5\x00\x00\x00\x00\x01,\x95\x00\x00\x00\x00\x014\x8d\x00\x00\x00\x00\x01<\xed\x00\x00\x00\x00\x01<\xed\x00\x00\x00\x00\x01\x04\xcd\x00\x00\x00\x00\x01\x0c\xed\x00\x00\x00\x00\x01\x14\xf5\x00\x00\x00\x00\x01\x1c\xc5\x00\x00\x00\x00\x01$\xf5\x00\x00\x00\x00\x01,\xd5\x00\x00\x00\x00\x014\xcd\x00\x00\x00\x00\x01<\xed\x00\x00\x00\x00\x01\x04\r\x03\x00\x00\x00\x01\x0c-\x03\x00\x00\x00\x01\x145\x03\x00\x00\x00\x01\x1c\x05\x03\x00\x00\x00\x01$5\x03\x00\x00\x00\x01,\x15\x03\x00\x00\x00\x014\r\x03\x00\x00\x00\x01<-\x03\x00\x00\x00\x01\x04M\x03\x00\x00\x00\x01\x0cm\x03\x00\x00\x00\x01\x14u\x03\x00\x00\x00\x01\x1cE\x03\x00\x00\x00\x01$u\x03\x00\x00\x00\x01,U\x03\x00\x00\x00\x014M\x03\x00\x00\x00\x01<m\x03\x00\x00\x00\x01\x04\x8d\x03\x00\x00\x00\x01\x0c\xad\x03\x00\x00\x00\x01\x14\xb5\x03\x00\x00\x00\x01\x1c\x85\x03\x00\x00\x00\x01$\xb5\x03\x00\x00\x00\x01,\x95\x03\x00\x00\x00\x014\x8d\x03\x00\x00\x00\x01<\xad\x03\x00\x00\x00\x01\x04\xcd\x03\x00\x00\x00\x01\x0c\xed\x03\x00\x00\x00\x01\x14\xf5\x03\x00\x00\x00\x01\x1c\xc5\x03\x00\x00\x00\x01$\xf5\x03\x00\x00\x00\x01,\xd5\x03\x00\x00\x00\x014\xcd\x03\x00\x00\x00\x01<\xed\x03\x00\x00\x00\x01\x04)\x01\x0c(\x01\x141\x01\x1c\x02\x01$7\x01,,\x014\x0e\x01<+\x01\x84i\x00\x00\x00\x00\x01\x8ch\x00\x00\x00\x00\x01\x94q\x00\x00\x00\x00\x01\x9cB\x00\x00\x00\x00\x01\xa4w\x00\x00\x00\x00\x01\xacl\x00\x00\x00\x00\x01\xb4N\x00\x00\x00\x00\x01\xbck\x00\x00\x00\x00\x01\x84\xa9\x00\x00\x00\x00\x01\x8c\xa8\x00\x00\x00\x00\x01\x94\xb1\x00\x00\x00\x00\x01\x9c\x82\x00\x00\x00\x00\x01\xa4\xb7\x00\x00\x00\x00\x01\xac\xac\x00\x00\x00\x00\x01\xb4\x8e\x00\x00\x00\x00\x01\xbc\xab\x00\x00\x00\x00\x01\x8c\xe8\x00\x00\x00\x00\x01\x94\xf1\x00\x00\x00\x00\x01\x9c\xc2\x00\x00\x00\x00\x01\xa4\xf7\x00\x00\x00\x00\x01\xac\xec\x00\x00\x00\x00\x01\xb4\xce\x00\x00\x00\x00\x01\xbc\xeb\x00\x00\x00\x00\x01\x04)\x01\x0c(\x01\x141\x01\x1c\x02\x01$7\x01,,\x014\x0e\x01<+\x01\x84i\x00\x00\x00\x00\x01\x8ch\x00\x00\x00\x00\x01\x94q\x00\x00\x00\x00\x01\x9cB\x00\x00\x00\x00\x01\xa4w\x00\x00\x00\x00\x01\xacl\x00\x00\x00\x00\x01\xb4N\x00\x00\x00\x00\x01\xbck\x00\x00\x00\x00\x01\x84\xa9\x00\x00\x00\x00\x01\x8c\xa8\x00\x00\x00\x00\x01\x94\xb1\x00\x00\x00\x00\x01\x9c\x82\x00\x00\x00\x00\x01\xa4\xb7\x00\x00\x00\x00\x01\xac\xac\x00\x00\x00\x00\x01\xb4\x8e\x00\x00\x00\x00\x01\xbc\xab\x00\x00\x00\x00\x01\x8c\xe8\x00\x00\x00\x00\x01\x94\xf1\x00\x00\x00\x00\x01\x9c\xc2\x00\x00\x00\x00\x01\xa4\xf7\x00\x00\x00\x00\x01\xac\xec\x00\x00\x00\x00\x01\xb4\xce\x00\x00\x00\x00\x01\xbc\xeb\x00\x00\x00\x00\x01\x84i\x00\x00\x00\x00\x01\x8ch\x03\x00\x00\x00\x01\x94q\x03\x00\x00\x00\x01\x9cB\x03\x00\x00\x00\x01\xa4w\x03\x00\x00\x00\x01\xacl\x03\x00\x00\x00\x01\xb4N\x03\x00\x00\x00\x01\xbck\x03\x00\x00\x00\x01\x84\xa9\x03\x00\x00\x00\x01\x8c\xa8\x03\x00\x00\x00\x01\x94\xb1\x03\x00\x00\x00\x01\x9c\x82\x03\x00\x00\x00\x01\xa4\xb7\x03\x00\x00\x00\x01\xac\xac\x03\x00\x00\x00\x01\xb4\x8e\x03\x00\x00\x00\x01\xbc\xab\x03\x00\x00\x00\x01\x8c\xe8\x03\x00\x00\x00\x01\x94\xf1\x03\x00\x00\x00\x01\x9c\xc2\x03\x00\x00\x00\x01\xa4\xf7\x03\x00\x00\x00\x01\xac\xec\x03\x00\x00\x00\x01\xb4\xce\x03\x00\x00\x00\x01\xbc\xeb\x03\x00\x00\x00')

begin()
add_([0x10], al)
add_([0x10], cl)
add_([0x10], dl)
add_([0x10], bl)
add_([0x10], ah)
add_([0x10], ch)
add_([0x10], dh)
add_([0x10], bh)
add_([ecx], al)
add_([ebp], cl)
add_([esi], dl)
add_([eax], bl)
add_([esi], ah)
add_([edx], ch)
add_([ecx], dh)
add_([ebp], bh)
add_([2*ecx], al)
add_([2*ebp], cl)
add_([2*esi], dl)
add_([2*eax], bl)
add_([2*esi], ah)
add_([2*edx], ch)
add_([2*ecx], dh)
add_([4*ebp], bh)
add_([4*ecx], al)
add_([4*ebp], cl)
add_([4*esi], dl)
add_([4*eax], bl)
add_([4*esi], ah)
add_([4*edx], ch)
add_([4*ecx], dh)
add_([8*ebp], bh)
add_([8*ebp], bh)
add_([8*ecx], al)
add_([8*ebp], cl)
add_([8*esi], dl)
add_([8*eax], bl)
add_([8*esi], ah)
add_([8*edx], ch)
add_([8*ecx], dh)
add_([8*ebp], bh)
add_([ecx + 0x3], al)
add_([ebp + 0x3], cl)
add_([esi + 0x3], dl)
add_([eax + 0x3], bl)
add_([esi + 0x3], ah)
add_([edx + 0x3], ch)
add_([ecx + 0x3], dh)
add_([ebp + 0x3], bh)
add_([2*ecx + 0x3], al)
add_([2*ebp + 0x3], cl)
add_([2*esi + 0x3], dl)
add_([2*eax + 0x3], bl)
add_([2*esi + 0x3], ah)
add_([2*edx + 0x3], ch)
add_([2*ecx + 0x3], dh)
add_([2*ebp + 0x3], bh)
add_([4*ecx + 0x3], al)
add_([4*ebp + 0x3], cl)
add_([4*esi + 0x3], dl)
add_([4*eax + 0x3], bl)
add_([4*esi + 0x3], ah)
add_([4*edx + 0x3], ch)
add_([4*ecx + 0x3], dh)
add_([4*ebp + 0x3], bh)
add_([8*ecx + 0x3], al)
add_([8*ebp + 0x3], cl)
add_([8*esi + 0x3], dl)
add_([8*eax + 0x3], bl)
add_([8*esi + 0x3], ah)
add_([8*edx + 0x3], ch)
add_([8*ecx + 0x3], dh)
add_([8*ebp + 0x3], bh)
add_([ebp + ecx], al)
add_([ebp + eax], cl)
add_([esi + ecx], dl)
add_([eax + edx], bl)
add_([esi + edi], ah)
add_([ebp + esp], ch)
add_([ecx + esi], dh)
add_([ebp + ebx], bh)
add_([2*ebp + ecx], al)
add_([2*ebp + eax], cl)
add_([2*esi + ecx], dl)
add_([2*eax + edx], bl)
add_([2*esi + edi], ah)
add_([2*ebp + esp], ch)
add_([2*ecx + esi], dh)
add_([2*ebp + ebx], bh)
add_([4*ebp + ecx], al)
add_([4*ebp + eax], cl)
add_([4*esi + ecx], dl)
add_([4*eax + edx], bl)
add_([4*esi + edi], ah)
add_([4*ebp + esp], ch)
add_([4*ecx + esi], dh)
add_([4*ebp + ebx], bh)
add_([8*ebp + eax], cl)
add_([8*esi + ecx], dl)
add_([8*eax + edx], bl)
add_([8*esi + edi], ah)
add_([8*ebp + esp], ch)
add_([8*ecx + esi], dh)
add_([8*ebp + ebx], bh)
add_([ebp + ecx], al)
add_([ebp + eax], cl)
add_([esi + ecx], dl)
add_([eax + edx], bl)
add_([esi + edi], ah)
add_([ebp + esp], ch)
add_([ecx + esi], dh)
add_([ebp + ebx], bh)
add_([2*ebp + ecx], al)
add_([2*ebp + eax], cl)
add_([2*esi + ecx], dl)
add_([2*eax + edx], bl)
add_([2*esi + edi], ah)
add_([2*ebp + esp], ch)
add_([2*ecx + esi], dh)
add_([2*ebp + ebx], bh)
add_([4*ebp + ecx], al)
add_([4*ebp + eax], cl)
add_([4*esi + ecx], dl)
add_([4*eax + edx], bl)
add_([4*esi + edi], ah)
add_([4*ebp + esp], ch)
add_([4*ecx + esi], dh)
add_([4*ebp + ebx], bh)
add_([8*ebp + eax], cl)
add_([8*esi + ecx], dl)
add_([8*eax + edx], bl)
add_([8*esi + edi], ah)
add_([8*ebp + esp], ch)
add_([8*ecx + esi], dh)
add_([8*ebp + ebx], bh)
add_([2*ebp + ecx], al)
add_([2*ebp + eax + 0x03], cl)
add_([2*esi + ecx + 0x03], dl)
add_([2*eax + edx + 0x03], bl)
add_([2*esi + edi + 0x03], ah)
add_([2*ebp + esp + 0x03], ch)
add_([2*ecx + esi + 0x03], dh)
add_([2*ebp + ebx + 0x03], bh)
add_([4*ebp + ecx + 0x03], al)
add_([4*ebp + eax + 0x03], cl)
add_([4*esi + ecx + 0x03], dl)
add_([4*eax + edx + 0x03], bl)
add_([4*esi + edi + 0x03], ah)
add_([4*ebp + esp + 0x03], ch)
add_([4*ecx + esi + 0x03], dh)
add_([4*ebp + ebx + 0x03], bh)
add_([8*ebp + eax + 0x03], cl)
add_([8*esi + ecx + 0x03], dl)
add_([8*eax + edx + 0x03], bl)
add_([8*esi + edi + 0x03], ah)
add_([8*ebp + esp + 0x03], ch)
add_([8*ecx + esi + 0x03], dh)
add_([8*ebp + ebx + 0x03], bh)

test(b'\x00\x04%\x10\x00\x00\x00\x00\x0c%\x10\x00\x00\x00\x00\x14%\x10\x00\x00\x00\x00\x1c%\x10\x00\x00\x00\x00$%\x10\x00\x00\x00\x00,%\x10\x00\x00\x00\x004%\x10\x00\x00\x00\x00<%\x10\x00\x00\x00\x00\x04\r\x00\x00\x00\x00\x00\x0c-\x00\x00\x00\x00\x00\x145\x00\x00\x00\x00\x00\x1c\x05\x00\x00\x00\x00\x00$5\x00\x00\x00\x00\x00,\x15\x00\x00\x00\x00\x004\r\x00\x00\x00\x00\x00<-\x00\x00\x00\x00\x00\x04M\x00\x00\x00\x00\x00\x0cm\x00\x00\x00\x00\x00\x14u\x00\x00\x00\x00\x00\x1cE\x00\x00\x00\x00\x00$u\x00\x00\x00\x00\x00,U\x00\x00\x00\x00\x004M\x00\x00\x00\x00\x00<\xad\x00\x00\x00\x00\x00\x04\x8d\x00\x00\x00\x00\x00\x0c\xad\x00\x00\x00\x00\x00\x14\xb5\x00\x00\x00\x00\x00\x1c\x85\x00\x00\x00\x00\x00$\xb5\x00\x00\x00\x00\x00,\x95\x00\x00\x00\x00\x004\x8d\x00\x00\x00\x00\x00<\xed\x00\x00\x00\x00\x00<\xed\x00\x00\x00\x00\x00\x04\xcd\x00\x00\x00\x00\x00\x0c\xed\x00\x00\x00\x00\x00\x14\xf5\x00\x00\x00\x00\x00\x1c\xc5\x00\x00\x00\x00\x00$\xf5\x00\x00\x00\x00\x00,\xd5\x00\x00\x00\x00\x004\xcd\x00\x00\x00\x00\x00<\xed\x00\x00\x00\x00\x00\x04\r\x03\x00\x00\x00\x00\x0c-\x03\x00\x00\x00\x00\x145\x03\x00\x00\x00\x00\x1c\x05\x03\x00\x00\x00\x00$5\x03\x00\x00\x00\x00,\x15\x03\x00\x00\x00\x004\r\x03\x00\x00\x00\x00<-\x03\x00\x00\x00\x00\x04M\x03\x00\x00\x00\x00\x0cm\x03\x00\x00\x00\x00\x14u\x03\x00\x00\x00\x00\x1cE\x03\x00\x00\x00\x00$u\x03\x00\x00\x00\x00,U\x03\x00\x00\x00\x004M\x03\x00\x00\x00\x00<m\x03\x00\x00\x00\x00\x04\x8d\x03\x00\x00\x00\x00\x0c\xad\x03\x00\x00\x00\x00\x14\xb5\x03\x00\x00\x00\x00\x1c\x85\x03\x00\x00\x00\x00$\xb5\x03\x00\x00\x00\x00,\x95\x03\x00\x00\x00\x004\x8d\x03\x00\x00\x00\x00<\xad\x03\x00\x00\x00\x00\x04\xcd\x03\x00\x00\x00\x00\x0c\xed\x03\x00\x00\x00\x00\x14\xf5\x03\x00\x00\x00\x00\x1c\xc5\x03\x00\x00\x00\x00$\xf5\x03\x00\x00\x00\x00,\xd5\x03\x00\x00\x00\x004\xcd\x03\x00\x00\x00\x00<\xed\x03\x00\x00\x00\x00\x04)\x00\x0c(\x00\x141\x00\x1c\x02\x00$7\x00,,\x004\x0e\x00<+\x00\x84i\x00\x00\x00\x00\x00\x8ch\x00\x00\x00\x00\x00\x94q\x00\x00\x00\x00\x00\x9cB\x00\x00\x00\x00\x00\xa4w\x00\x00\x00\x00\x00\xacl\x00\x00\x00\x00\x00\xb4N\x00\x00\x00\x00\x00\xbck\x00\x00\x00\x00\x00\x84\xa9\x00\x00\x00\x00\x00\x8c\xa8\x00\x00\x00\x00\x00\x94\xb1\x00\x00\x00\x00\x00\x9c\x82\x00\x00\x00\x00\x00\xa4\xb7\x00\x00\x00\x00\x00\xac\xac\x00\x00\x00\x00\x00\xb4\x8e\x00\x00\x00\x00\x00\xbc\xab\x00\x00\x00\x00\x00\x8c\xe8\x00\x00\x00\x00\x00\x94\xf1\x00\x00\x00\x00\x00\x9c\xc2\x00\x00\x00\x00\x00\xa4\xf7\x00\x00\x00\x00\x00\xac\xec\x00\x00\x00\x00\x00\xb4\xce\x00\x00\x00\x00\x00\xbc\xeb\x00\x00\x00\x00\x00\x04)\x00\x0c(\x00\x141\x00\x1c\x02\x00$7\x00,,\x004\x0e\x00<+\x00\x84i\x00\x00\x00\x00\x00\x8ch\x00\x00\x00\x00\x00\x94q\x00\x00\x00\x00\x00\x9cB\x00\x00\x00\x00\x00\xa4w\x00\x00\x00\x00\x00\xacl\x00\x00\x00\x00\x00\xb4N\x00\x00\x00\x00\x00\xbck\x00\x00\x00\x00\x00\x84\xa9\x00\x00\x00\x00\x00\x8c\xa8\x00\x00\x00\x00\x00\x94\xb1\x00\x00\x00\x00\x00\x9c\x82\x00\x00\x00\x00\x00\xa4\xb7\x00\x00\x00\x00\x00\xac\xac\x00\x00\x00\x00\x00\xb4\x8e\x00\x00\x00\x00\x00\xbc\xab\x00\x00\x00\x00\x00\x8c\xe8\x00\x00\x00\x00\x00\x94\xf1\x00\x00\x00\x00\x00\x9c\xc2\x00\x00\x00\x00\x00\xa4\xf7\x00\x00\x00\x00\x00\xac\xec\x00\x00\x00\x00\x00\xb4\xce\x00\x00\x00\x00\x00\xbc\xeb\x00\x00\x00\x00\x00\x84i\x00\x00\x00\x00\x00\x8ch\x03\x00\x00\x00\x00\x94q\x03\x00\x00\x00\x00\x9cB\x03\x00\x00\x00\x00\xa4w\x03\x00\x00\x00\x00\xacl\x03\x00\x00\x00\x00\xb4N\x03\x00\x00\x00\x00\xbck\x03\x00\x00\x00\x00\x84\xa9\x03\x00\x00\x00\x00\x8c\xa8\x03\x00\x00\x00\x00\x94\xb1\x03\x00\x00\x00\x00\x9c\x82\x03\x00\x00\x00\x00\xa4\xb7\x03\x00\x00\x00\x00\xac\xac\x03\x00\x00\x00\x00\xb4\x8e\x03\x00\x00\x00\x00\xbc\xab\x03\x00\x00\x00\x00\x8c\xe8\x03\x00\x00\x00\x00\x94\xf1\x03\x00\x00\x00\x00\x9c\xc2\x03\x00\x00\x00\x00\xa4\xf7\x03\x00\x00\x00\x00\xac\xec\x03\x00\x00\x00\x00\xb4\xce\x03\x00\x00\x00\x00\xbc\xeb\x03\x00\x00\x00')

begin()
mov_(eax, 3)
mov_(ecx, eax)
mov_(ch, al)
mov_(al, [eax])
mov_(eax, [4*ecx + 0x3])
mov_(eax, [0x3])
mov_(eax, [4*ecx + ebx + 0x3])
mov_(eax, [ebx + 0x3])
movb_([4*ecx + 0x3], 0x3)
movb_([0x3], 0x3)
movb_([ebx + 0x3], 0x3)
movl_([4*ecx + 0x3], 0x3)
movl_([0x3], 0x3)
movl_([ebx + 0x3], 0x3)
mov_(eax, [4*ecx + 0x3])
mov_(eax, [0x3])
mov_(eax, [4*ecx + ebx + 0x3])
mov_(eax, [4*ebp + ebx + 0x3])
mov_(eax, [ebx + 0x3])
movb_([4*ecx + 0x3], 0x3)
movb_([0x3], 0x3)
movb_([ebx + 0x3], 0x3)
movl_([4*ecx + 0x3], 0x3)
movl_([0x3], 0x3)
movl_([ebx + 0x3], 0x3)
add_(eax, 0x3)
add_(ecx, eax)
add_(ch, al)
add_(al, [eax])
add_(eax, [4*ecx + 0x3])
add_(eax, [0x3])
add_(eax, [4*ecx + ebx + 0x3])
add_(eax, [ebx + 0x3])
addb_([4*ecx + 0x3], 0x3)
addb_([0x3], 0x3)
addb_([ebx + 0x3], 0x3)
addl_([4*ecx + 0x3], 0x3)
addl_([0x3], 0x3)
addl_([ebx + 0x3], 0x3)
add_(eax, [4*ecx + 0x3])
add_(eax, [0x3])
add_(eax, [4*ecx + ebx + 0x3])
add_(eax, [4*ebp + ebx + 0x3])
add_(eax, [ebx + 0x3])
addb_([4*ecx + 0x3], 0x3)
addb_([0x3], 0x3)
addb_([ebx + 0x3], 0x3)
addl_([4*ecx + 0x3], 0x3)
addl_([0x3], 0x3)
addl_([ebx + 0x3], 0x3)
and_(eax, 0x3)
and_(ecx, eax)
and_(ch, al)
and_(al, [eax])
and_(eax, [4*ecx + 0x3])
and_(eax, [0x3])
and_(eax, [4*ecx + ebx + 0x3])
and_(eax, [ebx + 0x3])
andb_([4*ecx + 0x3], 0x3)
andb_([0x3], 0x3)
andb_([ebx + 0x3], 0x3)
andl_([4*ecx + 0x3], 0x3)
andl_([eax + 0x3], 0x3)
andl_([ebx + 0x3], 0x3)
and_(eax, [4*ecx + 0x3])
and_(eax, [0x3])
and_(eax, [4*ecx + ebx + 0x3])
and_(eax, [4*ebp + ebx + 0x3])
and_(eax, [ebx + 0x3])
andb_([4*ecx + 0x3], 0x3)
andb_([0x3], 0x3)
andb_([ebx + 0x3], 0x3)
andl_([4*ecx + 0x3], 0x3)
andl_([0x3], 0x3)
andl_([ebx + 0x3], 0x3)

test(b'\xb8\x03\x00\x00\x00\x89\xc1\x88\xc5\x8a\x04\x05\x00\x00\x00\x00\x8b\x04\x8d\x03\x00\x00\x00\x8b\x04%\x03\x00\x00\x00\x8b\x84\x8b\x03\x00\x00\x00\x8b\x04\x1d\x03\x00\x00\x00\xc6\x04\x8d\x03\x00\x00\x00\x03\xc6\x04%\x03\x00\x00\x00\x03\xc6\x04\x1d\x03\x00\x00\x00\x03\xc7\x04\x8d\x03\x00\x00\x00\x03\x00\x00\x00\xc7\x04%\x03\x00\x00\x00\x03\x00\x00\x00\xc7\x04\x1d\x03\x00\x00\x00\x03\x00\x00\x00\x8b\x04\x8d\x03\x00\x00\x00\x8b\x04%\x03\x00\x00\x00\x8b\x84\x8b\x03\x00\x00\x00\x8b\x84\xab\x03\x00\x00\x00\x8b\x04\x1d\x03\x00\x00\x00\xc6\x04\x8d\x03\x00\x00\x00\x03\xc6\x04%\x03\x00\x00\x00\x03\xc6\x04\x1d\x03\x00\x00\x00\x03\xc7\x04\x8d\x03\x00\x00\x00\x03\x00\x00\x00\xc7\x04%\x03\x00\x00\x00\x03\x00\x00\x00\xc7\x04\x1d\x03\x00\x00\x00\x03\x00\x00\x00\x05\x03\x00\x00\x00\x01\xc1\x00\xc5\x02\x04\x05\x00\x00\x00\x00\x03\x04\x8d\x03\x00\x00\x00\x03\x04%\x03\x00\x00\x00\x03\x84\x8b\x03\x00\x00\x00\x03\x04\x1d\x03\x00\x00\x00\x80\x04\x8d\x03\x00\x00\x00\x03\x80\x04%\x03\x00\x00\x00\x03\x80\x04\x1d\x03\x00\x00\x00\x03\x81\x04\x8d\x03\x00\x00\x00\x03\x00\x00\x00\x81\x04%\x03\x00\x00\x00\x03\x00\x00\x00\x81\x04\x1d\x03\x00\x00\x00\x03\x00\x00\x00\x03\x04\x8d\x03\x00\x00\x00\x03\x04%\x03\x00\x00\x00\x03\x84\x8b\x03\x00\x00\x00\x03\x84\xab\x03\x00\x00\x00\x03\x04\x1d\x03\x00\x00\x00\x80\x04\x8d\x03\x00\x00\x00\x03\x80\x04%\x03\x00\x00\x00\x03\x80\x04\x1d\x03\x00\x00\x00\x03\x81\x04\x8d\x03\x00\x00\x00\x03\x00\x00\x00\x81\x04%\x03\x00\x00\x00\x03\x00\x00\x00\x81\x04\x1d\x03\x00\x00\x00\x03\x00\x00\x00%\x03\x00\x00\x00!\xc1 \xc5"\x04\x05\x00\x00\x00\x00#\x04\x8d\x03\x00\x00\x00#\x04%\x03\x00\x00\x00#\x84\x8b\x03\x00\x00\x00#\x04\x1d\x03\x00\x00\x00\x80$\x8d\x03\x00\x00\x00\x03\x80$%\x03\x00\x00\x00\x03\x80$\x1d\x03\x00\x00\x00\x03\x81$\x8d\x03\x00\x00\x00\x03\x00\x00\x00\x81$\x05\x03\x00\x00\x00\x03\x00\x00\x00\x81$\x1d\x03\x00\x00\x00\x03\x00\x00\x00#\x04\x8d\x03\x00\x00\x00#\x04%\x03\x00\x00\x00#\x84\x8b\x03\x00\x00\x00#\x84\xab\x03\x00\x00\x00#\x04\x1d\x03\x00\x00\x00\x80$\x8d\x03\x00\x00\x00\x03\x80$%\x03\x00\x00\x00\x03\x80$\x1d\x03\x00\x00\x00\x03\x81$\x8d\x03\x00\x00\x00\x03\x00\x00\x00\x81$%\x03\x00\x00\x00\x03\x00\x00\x00\x81$\x1d\x03\x00\x00\x00\x03\x00\x00\x00')

begin()
not_(eax)
not_(ecx)
not_(ch)
not_(al)
not_(eax)
notb_([4*ecx + 0x3])
notb_([0x3])
notb_([ebx + 0x3])
notl_([4*ecx + 0x3])
notl_([0x3])
notl_([ebx + 0x3])
notl_([4*ecx + ebx + 0x3])
notb_([4*ecx + ebx + 0x3])

test(b'\xf7\xd0\xf7\xd1\xf6\xd5\xf6\xd0\xf7\xd0\xf6\x14\x8d\x03\x00\x00\x00\xf6\x14%\x03\x00\x00\x00\xf6\x14\x1d\x03\x00\x00\x00\xf7\x14\x8d\x03\x00\x00\x00\xf7\x14%\x03\x00\x00\x00\xf7\x14\x1d\x03\x00\x00\x00\xf7\x94\x8b\x03\x00\x00\x00\xf6\x94\x8b\x03\x00\x00\x00')