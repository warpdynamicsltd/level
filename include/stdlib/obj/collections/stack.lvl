import stdlib:sys:context as *;
import stdlib:collections:stack as *;
import stdlib:collections:sysstack;

type stack(A) extends obj(Stack(A)) with rec();

type stack_iterator(A) as rec(
  var stack = null as ref(Stack(A)),
  var index = 0 as int
)

method new ()(stack(A)) as stack(A)
{
  return obj(Stack(A))(Stack(A)());
}

method push(var this as ref(stack(A)), var v as A)
{
  exec this.obj.ptr.push(v);
}

method pop(var this as ref(stack(A)), var out as ref(A)) as bool
{
  return this.obj.ptr.pop(out);
}

method length(var this as ref(stack(A))) as int
{
  return this.obj.ptr.length;
}

method iterator(var this as ref(stack(A))) as stdlib:collections:sysstack:StackIterator(A)
{
  return this.obj.ptr.iterator();
}

method top(var this as ref(stack(A))) as val ref(A)
{
  return ref this.obj.ptr.top();
}
